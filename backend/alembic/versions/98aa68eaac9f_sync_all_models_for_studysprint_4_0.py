"""sync all models for StudySprint 4.0

Revision ID: 98aa68eaac9f
Revises: b897fff2ba7e
Create Date: 2025-07-24 08:12:33.262057

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

revision = '98aa68eaac9f'
down_revision = 'b897fff2ba7e'
branch_labels = None
depends_on = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('badge_icon', sa.String(length=100), nullable=True),
    sa.Column('badge_color', sa.String(length=7), nullable=True),
    sa.Column('criteria_type', sa.String(length=50), nullable=True),
    sa.Column('criteria_value', sa.Float(), nullable=True),
    sa.Column('criteria_description', sa.Text(), nullable=True),
    sa.Column('xp_reward', sa.Integer(), nullable=True),
    sa.Column('rarity', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('unlock_level', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('daily_stats',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('stat_date', sa.Date(), nullable=False),
    sa.Column('user_id', sa.String(length=100), nullable=True),
    sa.Column('total_study_minutes', sa.Integer(), nullable=True),
    sa.Column('active_study_minutes', sa.Integer(), nullable=True),
    sa.Column('break_minutes', sa.Integer(), nullable=True),
    sa.Column('idle_minutes', sa.Integer(), nullable=True),
    sa.Column('total_sessions', sa.Integer(), nullable=True),
    sa.Column('completed_sessions', sa.Integer(), nullable=True),
    sa.Column('average_session_duration', sa.Float(), nullable=True),
    sa.Column('average_focus_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('pages_read', sa.Integer(), nullable=True),
    sa.Column('pdfs_completed', sa.Integer(), nullable=True),
    sa.Column('exercises_completed', sa.Integer(), nullable=True),
    sa.Column('notes_created', sa.Integer(), nullable=True),
    sa.Column('highlights_made', sa.Integer(), nullable=True),
    sa.Column('goals_worked_on', sa.Integer(), nullable=True),
    sa.Column('goals_completed', sa.Integer(), nullable=True),
    sa.Column('milestones_achieved', sa.Integer(), nullable=True),
    sa.Column('pomodoro_cycles', sa.Integer(), nullable=True),
    sa.Column('pomodoro_effectiveness', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('reading_speed_wpm', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('comprehension_score', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('productivity_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('xp_earned', sa.Integer(), nullable=True),
    sa.Column('achievements_unlocked', sa.Integer(), nullable=True),
    sa.Column('streak_days', sa.Integer(), nullable=True),
    sa.Column('study_environments', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('peak_performance_hour', sa.Integer(), nullable=True),
    sa.Column('topic_breakdown', sa.JSON(), nullable=True),
    sa.Column('session_breakdown', sa.JSON(), nullable=True),
    sa.Column('goal_breakdown', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_daily_stats_stat_date'), 'daily_stats', ['stat_date'], unique=False)
    op.create_table('predictive_models',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('model_name', sa.String(length=100), nullable=False),
    sa.Column('model_type', sa.String(length=50), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=True),
    sa.Column('feature_set', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('training_period_days', sa.Integer(), nullable=True),
    sa.Column('min_data_points', sa.Integer(), nullable=True),
    sa.Column('accuracy_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('precision_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('recall_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('f1_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_trained', sa.DateTime(), nullable=True),
    sa.Column('last_validated', sa.DateTime(), nullable=True),
    sa.Column('training_data_count', sa.Integer(), nullable=True),
    sa.Column('model_parameters', sa.JSON(), nullable=True),
    sa.Column('feature_importance', sa.JSON(), nullable=True),
    sa.Column('validation_results', sa.JSON(), nullable=True),
    sa.Column('prediction_count', sa.Integer(), nullable=True),
    sa.Column('last_prediction', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('weekly_trends',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('week_number', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('user_id', sa.String(length=100), nullable=True),
    sa.Column('total_study_hours', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('total_sessions', sa.Integer(), nullable=True),
    sa.Column('total_pages', sa.Integer(), nullable=True),
    sa.Column('total_exercises', sa.Integer(), nullable=True),
    sa.Column('avg_daily_study_minutes', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('avg_focus_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('avg_productivity_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('goals_progress', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('completion_rate', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('consistency_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('study_time_change_pct', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('focus_change_pct', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('productivity_change_pct', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('most_productive_day', sa.String(length=10), nullable=True),
    sa.Column('best_study_time', sa.String(length=20), nullable=True),
    sa.Column('top_topic', sa.String(length=255), nullable=True),
    sa.Column('recommendations', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('improvement_areas', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('calculated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('learning_path_analysis',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(length=100), nullable=True),
    sa.Column('topic_id', sa.UUID(), nullable=True),
    sa.Column('current_level', sa.String(length=20), nullable=True),
    sa.Column('estimated_mastery', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('learning_velocity', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('total_content_pages', sa.Integer(), nullable=True),
    sa.Column('pages_completed', sa.Integer(), nullable=True),
    sa.Column('average_comprehension', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('difficulty_comfort_zone', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('preferred_session_length', sa.Integer(), nullable=True),
    sa.Column('optimal_study_times', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('best_environments', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('estimated_completion_weeks', sa.Integer(), nullable=True),
    sa.Column('next_milestone_date', sa.Date(), nullable=True),
    sa.Column('proficiency_projection', sa.JSON(), nullable=True),
    sa.Column('suggested_daily_minutes', sa.Integer(), nullable=True),
    sa.Column('recommended_next_topics', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('skill_gaps', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('strength_areas', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('prediction_confidence', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('data_quality_score', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('analyzed_at', sa.DateTime(), nullable=True),
    sa.Column('valid_until', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('study_efficiency_metrics',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('measurement_date', sa.Date(), nullable=False),
    sa.Column('user_id', sa.String(length=100), nullable=True),
    sa.Column('topic_id', sa.UUID(), nullable=True),
    sa.Column('pages_per_hour', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('concepts_mastered_per_hour', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('retention_rate', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('application_success_rate', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('attention_span_minutes', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('distraction_frequency', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('deep_work_percentage', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('cognitive_load_score', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('optimal_difficulty_level', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('challenge_comfort_ratio', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('flow_state_frequency', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('energy_efficiency', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('environment_effectiveness', sa.JSON(), nullable=True),
    sa.Column('time_of_day_performance', sa.JSON(), nullable=True),
    sa.Column('session_length_optimization', sa.JSON(), nullable=True),
    sa.Column('personal_benchmark_ratio', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('peer_benchmark_ratio', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('improvement_rate', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('calculated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('goals',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('goal_type', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('specific_description', sa.Text(), nullable=True),
    sa.Column('measurable_criteria', sa.JSON(), nullable=True),
    sa.Column('achievable_plan', sa.Text(), nullable=True),
    sa.Column('relevant_reason', sa.Text(), nullable=True),
    sa.Column('time_bound_deadline', sa.DateTime(), nullable=True),
    sa.Column('topic_id', sa.UUID(), nullable=True),
    sa.Column('pdf_id', sa.UUID(), nullable=True),
    sa.Column('parent_goal_id', sa.UUID(), nullable=True),
    sa.Column('target_value', sa.Float(), nullable=True),
    sa.Column('current_value', sa.Float(), nullable=True),
    sa.Column('target_unit', sa.String(length=50), nullable=True),
    sa.Column('progress_percentage', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('target_date', sa.DateTime(), nullable=True),
    sa.Column('completed_date', sa.DateTime(), nullable=True),
    sa.Column('estimated_hours', sa.Integer(), nullable=True),
    sa.Column('actual_hours', sa.Integer(), nullable=True),
    sa.Column('streak_count', sa.Integer(), nullable=True),
    sa.Column('best_streak', sa.Integer(), nullable=True),
    sa.Column('consistency_score', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('last_activity_date', sa.DateTime(), nullable=True),
    sa.Column('motivation_notes', sa.Text(), nullable=True),
    sa.Column('reward_description', sa.Text(), nullable=True),
    sa.Column('difficulty_rating', sa.Integer(), nullable=True),
    sa.Column('importance_rating', sa.Integer(), nullable=True),
    sa.Column('xp_reward', sa.Integer(), nullable=True),
    sa.Column('badges_earned', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('milestones_count', sa.Integer(), nullable=True),
    sa.Column('sub_goals_count', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('goal_metadata', sa.JSON(), nullable=True),
    sa.Column('reminder_frequency', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parent_goal_id'], ['goals.id'], ),
    sa.ForeignKeyConstraint(['pdf_id'], ['pdfs.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('goal_progress',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('goal_id', sa.UUID(), nullable=True),
    sa.Column('session_id', sa.UUID(), nullable=True),
    sa.Column('previous_value', sa.Float(), nullable=True),
    sa.Column('new_value', sa.Float(), nullable=True),
    sa.Column('change_amount', sa.Float(), nullable=True),
    sa.Column('progress_percentage', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('activity_type', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('automatic_update', sa.Boolean(), nullable=True),
    sa.Column('recorded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['goal_id'], ['goals.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['session_id'], ['study_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('milestones',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('goal_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('target_value', sa.Float(), nullable=True),
    sa.Column('target_percentage', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('order_sequence', sa.Integer(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('completed_date', sa.DateTime(), nullable=True),
    sa.Column('xp_reward', sa.Integer(), nullable=True),
    sa.Column('badge_name', sa.String(length=100), nullable=True),
    sa.Column('celebration_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['goal_id'], ['goals.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('performance_insights',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('insight_type', sa.String(length=50), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.String(length=100), nullable=True),
    sa.Column('topic_id', sa.UUID(), nullable=True),
    sa.Column('goal_id', sa.UUID(), nullable=True),
    sa.Column('data_points', sa.JSON(), nullable=True),
    sa.Column('confidence_score', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('impact_score', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('is_actionable', sa.Boolean(), nullable=True),
    sa.Column('action_items', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('estimated_improvement', sa.String(length=100), nullable=True),
    sa.Column('time_period_start', sa.Date(), nullable=True),
    sa.Column('time_period_end', sa.Date(), nullable=True),
    sa.Column('valid_until', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('user_dismissed', sa.Boolean(), nullable=True),
    sa.Column('user_acted_on', sa.Boolean(), nullable=True),
    sa.Column('generated_at', sa.DateTime(), nullable=True),
    sa.Column('last_shown', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['goal_id'], ['goals.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_achievements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('achievement_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.String(length=100), nullable=True),
    sa.Column('earned_at', sa.DateTime(), nullable=True),
    sa.Column('progress_value', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('triggered_by_goal', sa.UUID(), nullable=True),
    sa.Column('triggered_by_session', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], ),
    sa.ForeignKeyConstraint(['triggered_by_goal'], ['goals.id'], ),
    sa.ForeignKeyConstraint(['triggered_by_session'], ['study_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('pdfs', sa.Column('pdf_metadata', sa.JSON(), nullable=True))
    op.drop_column('pdfs', 'file_metadata')
    op.create_index(op.f('ix_topics_id'), 'topics', ['id'], unique=False)
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_topics_id'), table_name='topics')
    op.add_column('pdfs', sa.Column('file_metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_column('pdfs', 'pdf_metadata')
    op.drop_table('user_achievements')
    op.drop_table('performance_insights')
    op.drop_table('milestones')
    op.drop_table('goal_progress')
    op.drop_table('goals')
    op.drop_table('study_efficiency_metrics')
    op.drop_table('learning_path_analysis')
    op.drop_table('weekly_trends')
    op.drop_table('predictive_models')
    op.drop_index(op.f('ix_daily_stats_stat_date'), table_name='daily_stats')
    op.drop_table('daily_stats')
    op.drop_table('achievements')
    # ### end Alembic commands ###
